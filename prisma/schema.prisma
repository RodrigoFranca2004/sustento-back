datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//MODEL USER - START

model Users {
  user_id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  hash_password String
  age Int?
  gender Gender?
  weight Decimal? @db.Decimal(5,2) // kg up to 999.99
  height Decimal? @db.Decimal(5,2) // cm up to 999.99
  objective Objective
  activity_lvl ActivityLvl
  active_plan_id Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  MealPlans MealPlans[]
  Evolutions      UserEvolutions[]
}

enum Gender{
  M
  F
}

enum Objective{
  LOSE_WEIGHT
  GAIN_MUSCLE
  MAINTENANCE
}

enum ActivityLvl {
  SEDENTARY
  LIGHT
  MODERATE
  INTENSE
}

// MODEL USER - END

// MODEL MEALPLANS - START

model MealPlans {
  plan_id        Int     @id @default(autoincrement())
  plan_name      String?
  target_calories Decimal?
  target_protein  Decimal?
  target_carbs    Decimal?
  target_fat      Decimal?
  source         Source
  active         Boolean @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // foreign keys relations (imported)
  user_id        Int
  user Users @relation(fields: [user_id], references: [user_id])

  // foreign keys relations (exported)
  Meals Meals[]
}

enum Source {
  AUTOMATIC
  MANUAL
}
// MODEL MEALPLANS - END


//MODEL RESTRICTIONS - START

model Restrictions {
  restriction_id    Int    @id @default(autoincrement())
  restriction_name RestrictionName
}

enum RestrictionName {
  VEGAN
  VEGETARIAN
  GLUTEN_FREE
  LACTOSE_FREE
}

// MODEL RESTRICTIONS - END

//MODEL USER_EVOLUTIONS - START

model UserEvolutions {
  evolution_id   Int      @id @default(autoincrement())
  user_id        Int
  user           Users    @relation(fields: [user_id], references: [user_id])
  weight         Decimal? @db.Decimal(5,2) // kg up to 999.99
  bmi            Decimal? @db.Decimal(5,2)
  waist          Decimal? @db.Decimal(5,2) // cm up to 999.99
  body_fat       Decimal? @db.Decimal(5,2) // kg up to 999.99
  registered_at  DateTime @default(now())
}

// MODEL USER_EVOLUTIONS - END

// MODEL MEALS - START

model Meals {
  meal_id Int @id @default(autoincrement())
  meal_name String 
  time DateTime?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // foreign keys relations (imported)
  plan_id Int
  plan MealPlans @relation(fields: [plan_id], references: [plan_id])

  // index, it blocks the same plan_id and meal_name in a table
  @@unique([plan_id, meal_name])

}
