datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//MODEL USER - START

model Users {
  user_id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  hash_password String
  age Int?
  gender Gender?
  weight Decimal? @db.Decimal(5,2) // kg up to 999.99
  height Decimal? @db.Decimal(5,2) // cm up to 999.99
  objective Objective?
  activity_lvl ActivityLvl?
  active_plan_id Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  MealPlans           MealPlans[]
  Evolutions          UserEvolutions[]
  UserRestrictions    UserRestrictions[]
  PasswordResets       PasswordResets[]
}

enum Gender{
  M
  F
}

enum Objective{
  LOSE_WEIGHT
  GAIN_MUSCLE
  MAINTENANCE
}

enum ActivityLvl {
  SEDENTARY
  LIGHT
  MODERATE
  INTENSE
}

// MODEL USER - END

// MODEL PASSWORD_RESET - START

model PasswordResets {
  id Int @id @default(autoincrement())
  token String @unique
  expiresAt DateTime
  
  // foreign keys relations (imported)
  user_id Int
  user Users @relation(fields: [user_id], references: [user_id])
}

// MODEL MEALPLANS - START

model MealPlans {
  plan_id        Int     @id @default(autoincrement())
  plan_name      String?
  target_calories Decimal?
  target_protein  Decimal?
  target_carbs    Decimal?
  target_fat      Decimal?
  source         Source
  active         Boolean @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // foreign keys relations (imported)
  user_id        Int
  user Users @relation(fields: [user_id], references: [user_id])

  // foreign keys relations (exported)
  Meals Meals[]
}

enum Source {
  AUTOMATIC
  MANUAL
}
// MODEL MEALPLANS - END


//MODEL RESTRICTIONS - START

model Restrictions {
  restriction_id    Int    @id @default(autoincrement())
  restriction_name RestrictionName

  UserRestrictions UserRestrictions[]
  @@unique([restriction_id, restriction_name])
}

enum RestrictionName {
  VEGAN
  VEGETARIAN
  GLUTEN_FREE
  LACTOSE_FREE
}

// MODEL RESTRICTIONS - END

//MODEL USER_EVOLUTIONS - START

model UserEvolutions {
  evolution_id   Int      @id @default(autoincrement())
  user_id        Int
  user           Users    @relation(fields: [user_id], references: [user_id])
  weight         Decimal? @db.Decimal(5,2) // kg up to 999.99
  bmi            Decimal? @db.Decimal(5,2)
  waist          Decimal? @db.Decimal(5,2) // cm up to 999.99
  body_fat       Decimal? @db.Decimal(5,2) // kg up to 999.99
  registered_at  DateTime @default(now())
}

// MODEL USER_EVOLUTIONS - END

// MODEL MEALS - START

model Meals {
  meal_id Int @id @default(autoincrement())
  meal_name String 
  time DateTime?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // foreign keys relations (imported)
  plan_id Int
  plan MealPlans @relation(fields: [plan_id], references: [plan_id])

  // foreign keys relation (exported)
  MealAliments MealAliments[]

  // index, it blocks the same plan_id and meal_name in a table
  @@unique([plan_id, meal_name])

}

// MODEL MEALS - END

//MODEL ALIMENT - START

model Aliments {
  aliment_id          Int      @id @default(autoincrement())
  name                String
  calories            Decimal @db.Decimal(5,2) // kcal up to 999.99
  protein             Decimal @db.Decimal(5,2) // g up to 999.99
  carbohydrate        Decimal @db.Decimal(5,2) // g up to 999.99
  fat                 Decimal @db.Decimal(5,2) // g up to 999.99
  measurement_amount  Decimal @db.Decimal(5,2)
  measurement_unit    MeasurementUnit
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

   @@unique([aliment_id, name])

   // foreign keys relations (exported)
  MealAliments MealAliments[]

}

enum MeasurementUnit{
  KCAL    // calories
  G       // grams
  ML      // milliliters
  UN      // units
}

// MODEL ALIMENT - END

// MODEL USER_RESTRICTION - START

model UserRestrictions {
  user_id          Int
  restriction_id   Int

  user             Users    @relation(fields: [user_id], references: [user_id])
  restriction      Restrictions  @relation(fields: [restriction_id], references: [restriction_id])

  @@id([user_id, restriction_id])
}

// MODEL USER_RESTRICTION - END

// MODEL MEAL_ALIMENTS - START

model MealAliments {
  meal_aliment_id Int @id @default(autoincrement())
  quantity Decimal @db.Decimal(6,2) // up to 9999.99
  measurement_unit MeasurementUnit
  order Int?

  // foreign keys relations (imported)
  meal_id Int
  meal Meals @relation(fields: [meal_id], references: [meal_id])

  aliment_id Int
  aliment Aliments @relation(fields: [aliment_id], references: [aliment_id])

  @@unique([meal_id, aliment_id])
}
